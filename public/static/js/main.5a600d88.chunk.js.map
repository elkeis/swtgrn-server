{"version":3,"sources":["components/layout/Layout.tsx","components/layout/LeftPane.tsx","components/layout/SidePane.tsx","components/header/Header.tsx","components/product-card/Layover.tsx","components/tags/Tag.tsx","components/tags/ProductsCount.tsx","components/tags/Tags.tsx","components/tags/TagList.tsx","components/product-card/ProductCard.tsx","components/badge/Badge.tsx","components/product-card/ProductCardSmall.tsx","components/shopping-cart/ShoppingCart.tsx","components/checkout/CheckoutForm.tsx","components/checkout/CheckoutInfoBlock.tsx","components/checkout/CheckoutAddressBlock.tsx","components/checkout/CheckoutDoublecheckBlock.tsx","components/contacts/Contacts.tsx","components/event-card/EventCard.tsx","components/events/Events.tsx","components/index.tsx","store/index.ts","components/essentials/TextInput.tsx","components/essentials/ProgressIndicator.tsx","components/essentials/TextArea.tsx","components/essentials/AeroButton.tsx","components/essentials/AeroButtonAdd.tsx","components/essentials/AeroTumbler.tsx","components/essentials/index.tsx","store/navigation/types.tsx","store/navigation/reducers.tsx","store/navigation/actions.tsx","store/navigation/index.tsx","store/contacts/index.tsx","store/events/index.tsx","store/product-cards/types.tsx","store/product-cards/reducers.tsx","store/product-cards/mock/mock.tsx","services/fetchProducts.tsx","store/product-cards/actions.tsx","store/product-cards/index.tsx","store/checkout-form/types.tsx","store/checkout-form/reducers.tsx","store/checkout-form/actions.tsx","store/checkout-form/index.tsx","store/tags/types.tsx","store/tags/reducers.tsx","store/tags/actions.tsx","store/tags/index.tsx","components/product-card/images/pie-optimized_f2.jpg","store/contacts/reducers.tsx","store/events/reducers.tsx","components/event-card/circle-pies.jpg","store/product-cards/mock/1.jpg","store/product-cards/mock/2.jpg","store/product-cards/mock/3.jpg","store/product-cards/mock/4.jpg","store/product-cards/mock/5.jpg","store/product-cards/mock/6.jpg","containers/checkout-form/CheckoutFormContainer.tsx","containers/selectors.tsx","containers/NavigationContainer.tsx","containers/ProductCardsContainer.tsx","containers/ShoppingCartContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LayoutOffset","LeftPaneView","Layout","startingScreen","header","catalog","shoppingCart","checkoutForm","byScrollToCatalog","console","debug","byScrollToTop","isSidePaneOpen","catalogRef","useRef","useState","isOnStartingScreen","setOnStartingScreen","useEffect","handler","debounce","e","current","getBoundingClientRect","top","window","pageYOffset","addEventListener","removeEventListener","className","join","ref","SidePaneDirection","HeaderTumbler","SidePane","children","direction","isOpen","document","body","style","overflow","Layover","shortContent","longContent","height","showDetails","setShowDetails","backgoundStyle","setBackgoundStyle","expandedContentStyle","setExpandedContentStyle","lock","setLock","layover","timeout","setTimeout","clearTimeout","onClick","Tag","value","isSelected","bySelect","byDeselect","ProductsCount","count","isEnabled","byClick","text","Tags","all","selected","byUpdateSelection","tags","productsCount","byClickOnMessage","useMemo","map","t","indexOf","length","i","key","filter","tag","TagList","url","require","ProductCard","product","id","imageUrl","name","price","description","addedCount","byCountUpdate","newCount","log","image","imageHeight","setImageHeight","backgroundImage","Array","fill","v","byAdd","bySubstract","Math","max","showSubstract","Badge","content","isLarge","isHidden","inline","isVisible","setVisible","change","setChange","large","setLarge","ProductCardSmall","showControls","compactView","highlight","noProductsPlaceholder","ShoppingCart","products","noProducts","byCheckout","CheckoutBlock","Header","activeTumbler","showTumblers","byToggle","tumbler","shoppingCartItemsCount","selectedTagsCount","eventsCount","toggle","toggleOn","DEFAULT","showTumblersFlags","setShowTumblersFlags","falseIndex","newFlags","CART","isOn","TAGS","EVENTS","CONTACTS","CheckoutForm","progress","activeBlock","FIRST","byChangeActiveBlock","block","byCloseForm","firstBlock","secondBlock","thirdBlock","fourthBlock","left","blocksOffset","setBlocksOffset","SECOND","THIRD","FOURTH","done","CheckoutInfoBlock","inputs","isValid","reduce","sum","byAccept","input","isDisabled","CheckoutAddressBlock","address","selfDelivery","CheckoutDoublecheckBlock","phone","email","isSelfDelivery","p","Contacts","instagram","href","EventCard","Events","events","rootReducer","combineReducers","navigation","navigationReducer","productCards","productCardsReducer","checkoutFormReducer","tagsReducer","contacts","contactsReducer","eventsReducer","store","createStore","applyMiddleware","thunk","InputType","ProgressIndicator","TextArea","placeholder","byChange","newValue","disabled","onChange","target","TextInput","type","TEXT","byUpdate","AeroButton","small","classes","setClasses","onTouchStart","onTouchEnd","AeroButtonAdd","AeroTumbler","toggleTo","defaultClasses","concat","CatalogView","SET_SHOW_TUMBLERS","SET_ACTIVE_TUMBLER","SET_SHOW_CHECKOUT_FORM","SET_CATALOG_ACTIVE_VIEW","initialState","activeView","CATALOG","page","disableScroll","viewTumblerMap","setActiveTumbler","setShowTumblers","setShowCheckoutForm","showCheckoutForm","setCatalogActiveView","state","action","UPDATE_PRODUCT_CARD","FETCH_PRODUCTS_START","FETCH_RPODUCTS_FAILURE","FETCH_PRODUCTS_SUCCESS","list","isFetching","errors","card","fetchProducts","a","result","data","error","undefined","fetch","method","headers","JSON","stringify","query","response","ok","Error","json","message","code","updateProductCard","cardId","fetchProductsAsync","dispatch","UPDATE_NAME","UPDATE_PHONE","UPDATE_EMAIL","ACCEPT_FIRST_CHECKOUT_BLOCK","UPDATE_DELIVERY_INFO","SET_SELF_DELIVERY","ACCEPT_ADDRESS_BLOCK","ACCEPT_FINAL_BLOCK","RESET_FORM","checkoutBlock","isAccepted","addressBlock","deliveryInfo","finalBlock","acceptFirstCheckoutBlock","acceptAddressBlock","updateName","updatePhone","updateEmail","updateDeliveryInfo","setSelfDelivery","acceptFinalCheckoutBlock","resetForm","isNameValid","isValidForm","isValidPhone","isMobilePhone","isValidEmail","isEmail","isValidDeliveryInfo","isFormValid","UPDATE_SELECTION","updateSelectionAction","module","exports","CheckoutFormContainer","useSelector","checkoutInfo","checkoutAddress","checkoutDoubleCheck","useDispatch","PHONE","EMAIL","useFilteredProducts","pc","intersection","tumblerViewMap","NavigationContainer","c","LTR","RTL","ProductCardsContainer","ShoppingCartContainer","productCard","val","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a600d88.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n    debounce\n} from 'lodash';\n\nexport enum LayoutOffset {\n    LEFT = 'left',\n    MIDDLE = 'middle',\n    RIGHT = 'right'\n}\n\nexport interface ILayout {\n    startingScreen?: JSX.Element,\n    header?: JSX.Element,\n    catalog?: JSX.Element,\n    shoppingCart?: JSX.Element,\n    checkoutForm?: JSX.Element,\n\n    byScrollToCatalog?: () => any,\n    byScrollToTop?: () => any,\n    isSidePaneOpen?: boolean,\n}\n\nexport const Layout:React.FC<ILayout> = ({\n    startingScreen = <div>starting screen</div>,\n    header = <div>catalog header</div>,\n    catalog = <div>catalog body</div>,\n    shoppingCart = <div>shopping cart container</div>,\n    checkoutForm = <div>checkout form container </div>,\n\n    byScrollToCatalog = () => console.debug('scrolled to catalog'),\n    byScrollToTop = () => console.debug('scrolled to top'),\n    isSidePaneOpen = false,\n}) => {\n\n    const catalogRef = useRef<any>();\n    const [isOnStartingScreen, setOnStartingScreen] = useState(true);\n\n    useEffect(() => {\n        const handler = debounce(e => {\n            if (isOnStartingScreen) {\n                const rect = catalogRef.current.getBoundingClientRect();\n                if (rect.top <= 0) {\n                    setOnStartingScreen(false);\n                    byScrollToCatalog();\n                }\n            } else {\n                if (window.pageYOffset === 0) {\n                    setOnStartingScreen(true);\n                    byScrollToTop();\n                }\n            }\n        }, 100);\n        window.addEventListener('scroll', handler);\n\n        return () => {\n            window.removeEventListener('scroll', handler);\n        }\n    }, [isOnStartingScreen, byScrollToCatalog, byScrollToTop]);\n\n    return <div className=\"Layout\">\n\n\n        <div className=\"starting-screen\">\n            {startingScreen}\n        </div>\n\n        <div className={['catalog', isOnStartingScreen ? 'stop-scroll' : ''].join(' ')} ref={catalogRef}>\n\n            {/* <div className={[\n                'left-pane',\n                offset === LayoutOffset.LEFT ? 'show' : ''\n                ].join(' ')\n            }>\n                {leftPane}\n            </div> */}\n\n\n            {/* <div className={[\n                'right-pane',\n                offset === LayoutOffset.RIGHT ? 'show' : ''\n            ].join(' ')}>\n                {rightPane}\n            </div> */}\n\n            <div className=\"header\">\n                {header}\n            </div>\n\n            <div className={['body'].join(' ')}>\n                <div className={[\n                    'content',\n                ].join(' ')}>\n                    {catalog}\n                </div>\n            </div>\n        </div>\n        <div\n            className={[\n                'shopping-cart-container',\n                isOnStartingScreen ? 'hide' : 'show',\n                isSidePaneOpen ? 'hide' : 'show',\n            ].join(' ') }>\n\n            <div className=\"header\">\n                <i className=\"shopping-cart\"></i>\n            </div>\n\n            {shoppingCart}\n        </div>\n\n        <div className={[\n            'checkout-form-container',\n            isOnStartingScreen ? 'hide' : 'show',\n            isSidePaneOpen ? 'hide' : 'show',\n        ].join(' ') }>\n            {checkoutForm}\n        </div>\n    </div>\n}\n","import React from 'react';\n\nexport enum LeftPaneView {\n    CART, TAGS, NONE\n}\n\nexport interface ILeftPane {\n    showView?: LeftPaneView,\n    cartView: JSX.Element,\n    tagsView: JSX.Element\n}\n\nexport const LeftPane:React.FC<ILeftPane> = ({\n    showView = LeftPaneView.NONE,\n    cartView = <div>here be cart</div>,\n    tagsView = <div>here be tags</div>\n}) => {\n\n    return <div className=\"LeftPane\">\n\n\n    </div>\n}\n","import React, { useEffect } from 'react';\nimport './side-pane.scss';\n\nexport enum SidePaneDirection {\n    LTR = 'ltr',\n    RTL = 'rtl'\n}\n\nexport interface ISidePane {\n    isOpen?: boolean,\n    direction: SidePaneDirection,\n}\n\nexport const SidePane:React.FC<ISidePane> = ({\n    children,\n    direction,\n    isOpen = true,\n}) => {\n    useEffect(() => {\n        if(isOpen) {\n            document.body.style.overflow = 'hidden';\n            return () => {document.body.style.overflow = 'auto'};\n        }\n    }, [isOpen]);\n    return <div className={[\n        'SidePane',\n        direction,\n        isOpen ? '' : 'hide'\n    ].join(' ')}>\n            {children}\n    </div>\n}\n","import React, { useState, useEffect } from 'react';\nimport { AeroTumbler } from '../essentials';\nimport { Badge } from '../badge';\n\nexport enum HeaderTumbler {\n    CART, TAGS, EVENTS, CONTACTS, DEFAULT\n}\n\nexport interface IHeader {\n    activeTumbler?: HeaderTumbler,\n    showTumblers?: boolean,\n    byToggle?: (tumbler: HeaderTumbler) => any,\n    shoppingCartItemsCount?: number,\n    selectedTagsCount? : number,\n    eventsCount?: number,\n}\n\nexport const Header:React.FC<IHeader> = ({\n    activeTumbler = null,\n    showTumblers = false,\n    byToggle = tumbler => console.debug(`trying to toggle on ${tumbler}`),\n    shoppingCartItemsCount = 0,\n    selectedTagsCount = 0,\n    eventsCount = 0,\n}) => {\n    const toggle = (tumbler: HeaderTumbler, toggleOn: boolean) => {\n        if (toggleOn) {\n            byToggle(tumbler);\n        } else {\n            byToggle(HeaderTumbler.DEFAULT);\n        }\n    }\n\n    const [showTumblersFlags, setShowTumblersFlags] = useState([false, false, false, false]);\n    useEffect(() => {\n        if(showTumblers) {\n            setTimeout(() => {\n                const falseIndex = showTumblersFlags.indexOf(false);\n                if (falseIndex > -1) {\n                    const newFlags = [...showTumblersFlags];\n                    newFlags[falseIndex] = true;\n                    setShowTumblersFlags(newFlags);\n                }\n            }, 60);\n        } else {\n            if (showTumblersFlags.indexOf(true) > -1) {\n                setShowTumblersFlags([false, false, false, false]);\n            }\n        }\n    }, [showTumblers, setShowTumblersFlags, showTumblersFlags])\n\n\n    return <div className={['Header', showTumblers ? 'show-shadow' : ''].join(' ')}>\n        <div className=\"container\">\n            <div className=\"tumbler\">\n                <div className=\"badge-container\">\n                    <Badge\n                        content={shoppingCartItemsCount}\n                        isHidden={!showTumblersFlags[0] || activeTumbler === HeaderTumbler.CART}\n                    ></Badge>\n                </div>\n                <AeroTumbler\n                    isHidden={!showTumblersFlags[0]}\n                    isOn={activeTumbler === HeaderTumbler.CART}\n                    byClick={toggleOn => toggle(HeaderTumbler.CART, toggleOn)}>\n                    <i className=\"shopping-cart\"></i>\n                </AeroTumbler>\n            </div>\n\n            <div className=\"tumbler\">\n                <div className=\"badge-container\">\n                    <Badge\n                        content={selectedTagsCount}\n                        isHidden={!showTumblersFlags[1] || activeTumbler === HeaderTumbler.TAGS}\n                    ></Badge>\n                </div>\n                <AeroTumbler\n                    isHidden={!showTumblersFlags[1]}\n                    isOn={activeTumbler === HeaderTumbler.TAGS}\n                    byClick={toggleOn => toggle(HeaderTumbler.TAGS, toggleOn)}>\n                    <i className=\"pricetag\"></i>\n                </AeroTumbler>\n            </div>\n\n            <div className=\"brand\">\n                <i className=\"brand\" onClick={() => byToggle(HeaderTumbler.DEFAULT)}></i>\n            </div>\n\n            <div className=\"tumbler\">\n                <div className=\"badge-container\">\n                    <Badge\n                        content={eventsCount}\n                        isHidden={!showTumblersFlags[2] || activeTumbler === HeaderTumbler.EVENTS}\n                    ></Badge>\n                </div>\n                <AeroTumbler\n                    isHidden={!showTumblersFlags[2]}\n                    isOn={activeTumbler === HeaderTumbler.EVENTS}\n                    byClick={toggleOn => toggle(HeaderTumbler.EVENTS, toggleOn)}>\n                    <i className=\"flash\"></i>\n                </AeroTumbler>\n            </div>\n\n            <div className=\"tumber\">\n                <AeroTumbler\n                    isHidden={!showTumblersFlags[3]}\n                    isOn={activeTumbler === HeaderTumbler.CONTACTS}\n                    byClick={toggleOn => toggle(HeaderTumbler.CONTACTS, toggleOn)}>\n                    <i className=\"phone\"></i>\n                </AeroTumbler>\n            </div>\n        </div>\n    </div>\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport './layover.scss';\n\nexport interface ILayover {\n    shortContent?: JSX.Element,\n    longContent?: JSX.Element,\n    height?: number | null,\n}\n\nexport const Layover:React.FC<ILayover> = ({\n    shortContent = <span>short content</span>,\n    longContent = <span> long content </span>,\n    height = null\n}) => {\n\n    const [showDetails, setShowDetails] = useState(false);\n\n    const [backgoundStyle, setBackgoundStyle] = useState<any>(null);\n    const [expandedContentStyle, setExpandedContentStyle] = useState<any>(null);\n\n    const [lock, setLock] = useState(false);\n\n\n    const layover = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        let timeout: NodeJS.Timeout;\n        if (showDetails) {\n            timeout = setTimeout(() => {\n                setBackgoundStyle({height});\n                setExpandedContentStyle({height});\n            }, 300);\n        } else {\n            timeout = setTimeout(() => {\n                setBackgoundStyle(null);\n                setExpandedContentStyle(null);\n            }, 300);\n        }\n\n        return () => {\n            if (timeout) {\n                clearTimeout(timeout);\n;            }\n        }\n    }, [showDetails, height])\n\n    return <div className=\"Layover\" ref={layover}>\n        <div className=\"details\" style={backgoundStyle} onClick={() => {\n            if (!lock) {\n                setShowDetails(!showDetails);\n                setLock(true);\n                setTimeout(() => setLock(false), 2000);\n            }\n        }}>\n\n            <div className={'background'}></div>\n\n            <div\n                className={['content',  showDetails ? 'hide' : 'show'].join(' ')}\n            >\n                <i className=\"eye\"></i>\n                {shortContent}\n            </div>\n\n            <div\n                className={['expanded-content', showDetails ? 'show' : 'hide'].join(' ')}\n                style={expandedContentStyle}>\n\n                <div className=\"description\">\n                    {longContent}\n                </div>\n                <div className=\"short\"> {shortContent} </div>\n                <i className=\"eye-off\"></i>\n\n            </div>\n        </div>\n    </div>\n}\n","import React from 'react';\n\nexport interface ITag {\n    value: string,\n    isSelected: boolean,\n    bySelect: () => any,\n    byDeselect: () => any,\n\n}\n\nexport const Tag:React.FC<ITag> = ({\n    value = 'no value specified',\n    isSelected = false,\n    bySelect,\n    byDeselect\n}) => {\n    return <div className={[\n        'Tag',\n        isSelected ? 'selected' : ''\n    ].join(' ')}\n        onClick={() => {\n            if (isSelected) {\n                byDeselect();\n            } else {\n                bySelect();\n            }\n        }}\n    >\n        #{value}\n    </div>\n}\n","import React from 'react';\n\nexport interface IProductsCount {\n    count?: number,\n    isEnabled?: boolean,\n    byClick?: () => any,\n}\n\nexport const ProductsCount:React.FC<IProductsCount> = ({\n    count = -1,\n    isEnabled = false,\n    byClick = () => console.debug('by click is not implemented')\n}) => {\n    if (count < 0) { return null }\n\n    let text = <span>Выберите желаемые ингридиенты</span>;\n\n    if (isEnabled) {\n        if (count === 0) {\n            text = <span className=\"underline\">У нас нет десертов с выбранными ингридиентами :(</span>\n        } else if (count === 1) {\n            text = <> <span className=\"underline\">У нас есть</span>  <span className=\"count\">{count}</span> <span className=\"underline\">пироженное с выбранными ингридиентами</span></>\n        } else if (count > 1) {\n            text = <><span className=\"underline\">У нас есть</span> <span className=\"count\">{count}</span> <span className=\"underline\">пироженных с выбранными ингридентами</span> </>\n        }\n    }\n\n    return <div className=\"ProductsCount\" onClick={() => {\n        if (isEnabled ) {\n            byClick()\n        }\n    }}>\n        {text}\n    </div>\n}\n","import './tags.scss';\nimport React, { useMemo } from 'react';\nimport { Tag } from './Tag';\nimport { ProductsCount } from './ProductsCount';\n\nexport interface ITags {\n    all?: Array<string>,\n    selected?: Array<string>,\n    byUpdateSelection?: (tags: Array<string>) => any,\n    byClickOnMessage? : () => any,\n    productsCount?: number,\n}\n\nexport const Tags:React.FC<ITags> = ({\n    all = ['here', 'be', 'selected', 'and', 'unselected', 'tags'],\n    selected = ['selected'],\n    byUpdateSelection = tags => console.debug(`selected tags can't be updated with ${tags}  (not implemented)`),\n    productsCount = -1,\n    byClickOnMessage = () => console.debug('click on message is not implemented')\n}) => {\n    const tags = useMemo(() => all.map(t => ({\n            value: t,\n            isSelected: selected.indexOf(t) > -1\n    })), [selected, all])\n\n    return <div className=\"Tags\">\n        <ProductsCount\n            count={productsCount}\n            isEnabled={selected.length > 0}\n            byClick={() => byClickOnMessage()}\n        ></ProductsCount>\n        <div className=\"tags-container\">\n            {tags.map((t,i) => <Tag\n                key={i}\n                {...t}\n                bySelect={() => byUpdateSelection([...selected, t.value])}\n                byDeselect={() => byUpdateSelection(selected.filter(tag => tag !== t.value))}\n            ></Tag>)}\n        </div>\n    </div>\n}\n","import React from 'react';\nimport './tag-list.scss';\n\nexport interface ITagList {\n    tags?: Array<string>\n}\n\nexport const TagList:React.FC<ITagList> = ({\n    tags = []\n}) => {\n    return <div className=\"TagList\">\n        {tags.map((t,i) => <span key={i}>#{t} </span>)}\n    </div>\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport { AeroButtonAdd } from '../essentials';\nimport { Layover } from './Layover';\nimport { debounce } from 'lodash';\n\nimport {\n    TProduct\n} from '../../services';\nimport { TagList } from '../tags';\n\nconst url = require('./images/pie-optimized_f2.jpg');\n\nexport interface IProductCard {\n    id: number\n    product: TProduct\n    addedCount: number,\n    byCountUpdate?: (newCount: number) => any | undefined\n}\n\nexport const ProductCard:React.FC<IProductCard> = ({\n    product: {\n        id = -1,\n        imageUrl = url,\n        name = 'product name',\n        price = 5.5,\n        tags = ['#here', '#be', '#tags'],\n        description = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`,\n    },\n    addedCount = 0,\n    byCountUpdate = newCount => console.log(`update addedCount with addedCount:${newCount} (not implemented)`)\n\n}) => {\n\n    const image = useRef<HTMLDivElement>(null);\n    const [imageHeight, setImageHeight] = useState<number | null>(null);\n    useEffect(() => {\n        const handler = debounce(() => {\n            setImageHeight((image && image.current && image.current.getBoundingClientRect().height) || null);\n        }, 60);\n        window.addEventListener('resize', handler);\n        handler();\n        return () => {\n            window.removeEventListener('resize', handler);\n        }\n    }, [])\n\n    return <div className=\"Product\" >\n        <div className=\"image\" style={ { backgroundImage: `url(${imageUrl})` } } ref={image}>\n            <Layover\n                height={imageHeight}\n                shortContent={\n                    <TagList tags={tags}></TagList>\n                }\n                longContent={\n                    <div> {description} </div>\n                }\n            ></Layover>\n            <div className=\"elements\">\n                <div className=\"elements-container\">\n                    {\n                        Array(addedCount).fill(0).map((v, i) => {\n                            return <div key={i} className=\"item-container\">\n                                <i className=\"pie-piece\"></i>\n                            </div>\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n        <div className=\"footer\">\n            <div className=\"background\"></div>\n            <div className=\"content\">\n                <div className=\"name\">{name}</div>\n                <div className=\"controls\">\n                    <AeroButtonAdd\n                        byAdd={() => byCountUpdate(addedCount + 1)}\n                        bySubstract={() => byCountUpdate(Math.max(0, addedCount - 1))}\n                        showSubstract={addedCount > 0}\n                    ></AeroButtonAdd>\n                </div>\n                <div className=\"price\">{price}P.</div>\n            </div>\n        </div>\n    </div>\n}\n","import React, { useEffect, useState } from 'react';\nimport './badge.scss';\n\nexport interface IBadge {\n    content?: number,\n    isLarge? : boolean,\n    isHidden?: boolean,\n    inline?: boolean,\n}\n\nexport const Badge:React.FC<IBadge> = ({\n    content = 0,\n    isLarge = false,\n    isHidden = false,\n    inline = false,\n}) => {\n    const [isVisible, setVisible] = useState(content > 0);\n    const [change, setChange] = useState(false);\n    const [large, setLarge] = useState(false);\n\n    useEffect(() => {\n        setVisible(content > 0);\n\n\n        if(content > 9) {\n            setLarge(true);\n        } else {\n            setLarge(false);\n        }\n\n        setChange(true);\n        const t = setTimeout(() => {\n            setChange(false);\n        }, 500);\n\n        return () => clearTimeout(t);\n\n    }, [content]);\n\n\n    return <div className={[\n            'Badge',\n            isVisible && !isHidden ? 'show' : 'hide',\n            isLarge ? 'large' : '',\n            inline ? 'inline' : ''\n        ].join(' ')}>\n        <div className={[\n            'item',\n            large ? 'large': '',\n            change ? 'change': ''\n            ].join(' ')}>{content}</div>\n    </div>\n}\n","import React from 'react';\n\nimport {\n    IProductCard\n} from './ProductCard';\n\nimport { AeroButtonAdd } from '../essentials';\nimport { Badge } from '../badge';\nimport { TagList } from '../tags';\n\nconst url = require('./images/pie-optimized_f2.jpg');\n\nexport interface IProductCardSmall extends IProductCard {\n    showControls?: boolean,\n    compactView?: boolean,\n}\n\nexport const ProductCardSmall:React.FC<IProductCardSmall> = ({\n    product: {\n        id = -1,\n        imageUrl = url,\n        name = 'product name',\n        price = 5.5,\n        tags = ['#here', '#be', '#tags'],\n        description = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`,\n    },\n    addedCount = 0,\n    byCountUpdate = newCount => console.log(`update addedCount with addedCount:${newCount} (not implemented)`),\n    showControls = false,\n    compactView = false,\n}) => {\n    return <div className={[\n        'ProductCardSmall',\n        compactView ? 'compact-view' : ''\n        ].join(' ')}>\n        <div className=\"product-view\">\n\n            <div className=\"count-badge\">\n                <Badge\n                    content={addedCount}\n                    isLarge={true}\n                > </Badge>\n            </div>\n\n            <div className=\"image\" style={{\n                backgroundImage: `url(${imageUrl})`\n            }}>\n            </div>\n\n            <div className={[\n                'controls',\n                showControls ? 'show' : 'hide'\n                ].join(' ')}>\n\n                <AeroButtonAdd\n                    highlight={false}\n                    byAdd={() => byCountUpdate(addedCount + 1)}\n                    bySubstract={() => byCountUpdate(Math.max(0, addedCount - 1))}\n                    showSubstract={addedCount > 0}\n                ></AeroButtonAdd>\n            </div>\n        </div>\n        <div className=\"description\">\n            <div className=\"name\">{name}</div>\n            <div className=\"tags\"> <TagList tags={tags}></TagList></div>\n        </div>\n    </div>\n}\n","import React from 'react';\nimport './shopping-cart.scss';\n\nexport interface IShoppingCart {\n    products?: Array<JSX.Element>,\n    price?: number,\n    byCheckout?: () => {}\n}\n\nconst noProductsPlaceholder = <div className=\"no-products\">\n    Корзина Пуста\n</div>\n\nexport const ShoppingCart:React.FC<IShoppingCart> = ({\n    products = [<div>here should be shopping cart </div>],\n    price = 0,\n    byCheckout = () => console.log('proceed to checkout functionality is not implemented')\n}) => {\n\n    const noProducts = products.length === 0;\n\n    return <div className=\"ShoppingCart\">\n\n        <div className=\"padding\">\n            <div className=\"products\">\n                {\n                    noProducts ? noProductsPlaceholder : products\n                }\n            </div>\n\n            <div className={['footer', noProducts ? 'hide' : 'show'].join(' ')}>\n                <div className=\"price\">\n                    {price}Р.\n                </div>\n            </div>\n        </div>\n    </div>\n}\n","import React, { useState, useEffect } from 'react';\nimport './checkout-form.scss';\nimport {\n    ProgressIndicator,\n} from '../essentials';\n\nexport enum CheckoutBlock {\n    FIRST, SECOND, THIRD, FOURTH\n}\n\nexport interface ICheckoutForm {\n\n    activeBlock?: CheckoutBlock,\n    progress?: [boolean, boolean, boolean]\n\n    byChangeActiveBlock?: (block: CheckoutBlock) => any,\n    byCloseForm?: () => any,\n\n    firstBlock?: JSX.Element,\n    secondBlock?: JSX.Element,\n    thirdBlock?: JSX.Element,\n    fourthBlock?: JSX.Element,\n}\n\nexport const CheckoutForm:React.FC<ICheckoutForm> = ({\n    progress = [false, false, false],\n    activeBlock = CheckoutBlock.FIRST,\n    byChangeActiveBlock = block => console.debug(`change active block ${block} is not implemented`),\n    byCloseForm = () => console.log('close form'),\n\n    firstBlock = <div>here should be first block</div>,\n    secondBlock = <div>here should be the second block</div>,\n    thirdBlock = <div>here should be the third block</div>,\n    fourthBlock = <div>here should be the fourth block</div>\n}) => {\n\n    const [blocksOffset, setBlocksOffset] = useState({\n        left: `0%`\n    });\n\n    useEffect(() => {\n        let left = 0;\n        switch (activeBlock) {\n            case CheckoutBlock.FIRST:\n                left = 0;\n                break;\n            case CheckoutBlock.SECOND:\n                left = -100;\n                break;\n            case CheckoutBlock.THIRD:\n                left = -200\n                break;\n            case CheckoutBlock.FOURTH:\n                left = -300\n                break;\n            default: return;\n        }\n\n        setBlocksOffset({\n            left: `${left}%`\n        });\n    }, [activeBlock]);\n\n    return <div className=\"CheckoutForm\">\n        <div className=\"progress\">\n            <ProgressIndicator\n                done={progress[0]}\n                byClick={() => byChangeActiveBlock(CheckoutBlock.FIRST)}\n            ></ProgressIndicator>\n            <ProgressIndicator\n                done={progress[1]}\n                byClick={() => byChangeActiveBlock(CheckoutBlock.SECOND)}\n                ></ProgressIndicator>\n            <ProgressIndicator\n                done={progress[2]}\n                byClick={() => byChangeActiveBlock(CheckoutBlock.THIRD)}\n            ></ProgressIndicator>\n        </div>\n\n        <div className=\"scrollable-area\" style={blocksOffset}>\n            <div className={[\n                'block',\n                activeBlock === CheckoutBlock.FIRST ? 'active' : 'active'].join(' ')}>\n                {firstBlock}\n            </div>\n\n            <div className={[\n                'block',\n                activeBlock === CheckoutBlock.SECOND ? 'active' : 'active'].join(' ')}>\n                {secondBlock}\n            </div>\n\n            <div className={[\n                'block',\n                activeBlock === CheckoutBlock.THIRD ? 'active' : ''].join(' ')}>\n                {thirdBlock}\n            </div>\n\n            <div className={[\n                'block',\n                activeBlock === CheckoutBlock.FOURTH ? 'active' : 'active'].join(' ')}>\n                {fourthBlock}\n            </div>\n        </div>\n    </div>\n}\n","import React from 'react';\nimport { TextInput, AeroButton, ITextInput } from '../essentials';\n\nexport interface ICheckoutInfoBlock {\n    inputs?: Array<ITextInput>,\n    isValid?: boolean\n    byAccept?: () => any\n}\n\nexport const CheckoutInfoBlock:React.FC<ICheckoutInfoBlock> = ({\n    inputs = [],\n    isValid = inputs.map(i => i.isValid).reduce((sum, v) => (sum && v), !!inputs.length),\n    byAccept = () => console.debug('accepting the form is not implemented')\n}) => {\n\n    return <div className=\"CheckoutInfoBlock\">\n        {inputs.map((input, i) => (\n            <TextInput\n                key={i}\n                {...input}\n            ></TextInput>\n\n        ))}\n\n        <AeroButton\n            isDisabled={!isValid}\n            byClick={() => byAccept()} >\n            <i className=\"checkmark\"></i>\n        </AeroButton>\n    </div>\n}\n","import React from 'react';\nimport { ITextArea, IAeroTumbler, TextArea, AeroTumbler, AeroButton } from '../essentials';\n\nexport interface ICheckoutAddressBlock {\n    address?: ITextArea,\n    selfDelivery?: IAeroTumbler,\n    isValid?: boolean,\n    byAccept?: () => any,\n}\n\nexport const CheckoutAddressBlock:React.FC<ICheckoutAddressBlock> = ({\n    address = null,\n    selfDelivery = null,\n    isValid = false,\n    byAccept = () => console.debug('by accept is not implemented on CheckoutAddressBlock'),\n}) => {\n    return <div className=\"CheckoutAddressBlock\">\n        <TextArea {...address}></TextArea>\n\n        <div className=\"self-delivery\">\n            <AeroTumbler {...selfDelivery}>\n                <i className=\"car\"></i>\n            </AeroTumbler>\n\n            самовывоз\n        </div>\n\n        <AeroButton\n            isDisabled={!isValid}\n            byClick={() => byAccept()} >\n            <i className=\"checkmark\"></i>\n        </AeroButton>\n    </div>\n}\n","import React from 'react';\nimport { ProductCardSmall, IProductCardSmall } from '../product-card';\nimport { AeroButton } from '../essentials';\n\nexport interface ICheckoutDoublecheckBlock {\n    products?: Array<IProductCardSmall>,\n    name?: string,\n    phone?: string,\n    email?: string,\n    address?: string,\n    isSelfDelivery?: boolean,\n    byAccept?: () => any,\n}\n\nexport const CheckoutDoublecheckBlock:React.FC<ICheckoutDoublecheckBlock> = ({\n    products = [],\n    name = '',\n    phone = '',\n    email = '',\n    address = '',\n    isSelfDelivery = false,\n    byAccept = () => console.debug('checkout doublecheck block accept is not implemented')\n}) => {\n    return <div className=\"CheckoutDoublecheckBlock\">\n    <div className=\"header\">Пожалуйста Подтвердите Заказ</div>\n    <div className=\"products\">\n        {products.map(p => (\n            <ProductCardSmall\n                key={p.id}\n                {...p}\n                compactView={true}\n            >\n            </ProductCardSmall>\n        ))}\n    </div>\n\n    <div className=\"info\">\n        <div className=\"info-block\">\n            <span>имя:</span> {name}\n        </div>\n\n        <div className=\"info-block\">\n            <span>телефон:</span> {phone}\n        </div>\n\n        <div className=\"info-block\">\n            <span>email:</span> {email}\n        </div>\n\n        <div className=\"info-block\">\n            <span>Доставка:</span> {\n                isSelfDelivery ?\n                'самовывоз' : address\n            }\n        </div>\n\n        <div className=\"info-block price\">\n            <span>Цена:</span> {\n                products.map(p => (p.addedCount * (p.product.price || 0))).reduce((sum, price) => sum + price, 0)\n            } Р. {isSelfDelivery ? '' : ' + доставка'}\n        </div>\n    </div>\n\n    <div className=\"controls\">\n        <AeroButton\n            byClick={() => byAccept()}\n        >\n            <i className=\"checkmark\"></i>\n        </AeroButton>\n    </div>\n</div>\n}\n","import React from 'react';\nimport './contacts.scss';\n\nexport interface IContacts {\n    phone?: string,\n    email?: string,\n    instagram?: string,\n}\n\nexport const Contacts:React.FC<IContacts> = ({\n    phone = '375290000000',\n    email = 'email@email.com',\n    instagram = 'sweetgreen_by'\n}) => {\n    return <div className=\"Contacts\">\n        <div className=\"logo-container\">\n            <i className=\"logo-text\"></i>\n        </div>\n\n        <div className=\"buttons-container\">\n            <div className=\"contact-button\">\n                <a href={'mailto:' + email}>\n                    <i className=\"email-white\"></i>\n                    {email}\n                </a>\n            </div>\n\n            <div className=\"contact-button\">\n                <a href={'tel:' + phone}>\n                    <i className=\"phone-white\"></i>\n                    {phone}\n                </a>\n            </div>\n\n            <div className=\"contact-button\">\n                <a href={`https://www.instagram.com/${instagram}/`}>\n                    <i className=\"instagram-white\"></i>\n                    {`@${instagram}`}\n                </a>\n            </div>\n        </div>\n\n    </div>\n}\n","import React from 'react';\nimport './event-card.scss';\n\n\nexport interface IEventCard {\n    imageUrl?: string,\n    description?: string,\n    name?: string,\n    price?: number,\n}\n\nconst url = require('./circle-pies.jpg');\n\nexport const EventCard:React.FC<IEventCard> = ({\n    imageUrl = url,\n    name = 'name',\n    price = '-1',\n    description = 'Купите 10 пирожных и получите одно в подарок'\n}) => {\n    return <div className=\"EventCard\">\n        <div className=\"image\" style={{\n            backgroundImage: `url(${url})`\n        }}>\n        </div>\n        <div className=\"footer\">\n            <div className=\"main-info\">\n                <div className=\"name\">\n                    {name}\n                </div>\n                <div className=\"price\">\n                    {price}Р.\n                </div>\n            </div>\n            <div className=\"description\">\n                {description}\n            </div>\n        </div>\n    </div>\n}\n","import React from 'react';\nimport './events.scss';\n\nimport { IEventCard, EventCard } from '../event-card';\n\nexport interface IEvents {\n    events: Array<IEventCard>,\n\n}\n\nexport const Events:React.FC<IEvents> = ({\n    events = []\n}) => {\n    return <div className=\"Events\">\n        {events.map(e => <EventCard {...e}></EventCard>)}\n    </div>\n}\n","import './components.scss';\n\nexport * from './layout';\n\nexport * from './product-card';\n\nexport * from './shopping-cart';\n\nexport * from './header';\n\nexport * from './checkout';\n\nexport * from './tags';\n\nexport * from './contacts';\n\nexport * from './event-card';\n\nexport * from './events';\n","import {\n    combineReducers,\n    createStore,\n    applyMiddleware\n} from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport { navigationReducer, $Navigation } from './navigation';\nimport { productCardsReducer, $ProductCards } from './product-cards';\nimport { checkoutFormReducer, $CheckoutForm } from './checkout-form';\nimport { tagsReducer, $Tags } from './tags';\nimport { $Contacts, contactsReducer } from './contacts';\nimport { $Events, eventsReducer } from './events';\n\nexport * from './product-cards';\nexport * from './navigation';\nexport * from './checkout-form';\nexport * from './tags';\nexport * from './contacts';\nexport * from './events';\n\n\nexport interface $App {\n    navigation: $Navigation,\n    productCards: $ProductCards,\n    checkoutForm: $CheckoutForm,\n    tags: $Tags,\n    contacts: $Contacts,\n    events: $Events,\n}\n\nconst rootReducer = combineReducers<$App>({\n    navigation: navigationReducer,\n    productCards: productCardsReducer,\n    checkoutForm: checkoutFormReducer,\n    tags: tagsReducer,\n    contacts: contactsReducer,\n    events: eventsReducer\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React from 'react';\nimport './text-input.scss';\n\nexport enum InputType {\n    TEXT = 'text',\n    PHONE = 'tel',\n    EMAIL = 'email'\n}\n\nexport interface ITextInput {\n    value?: string,\n    isValid?: boolean,\n    type?: InputType,\n    placeholder?: string,\n\n    byUpdate?: (newValue: string) => any,\n    byTouch?: () => any,\n}\n\nexport const TextInput:React.FC<ITextInput> = ({\n    type = InputType.TEXT,\n    value = '',\n    isValid = false,\n    placeholder = 'text',\n\n    byUpdate = (value: string) => console.debug(`Update with (${value}) is not implemented`)\n}) => {\n\n    return <div className=\"TextInput\">\n        <input\n            type={type}\n            value={value}\n            onChange={(e) => byUpdate(e.target.value)}\n            placeholder={placeholder}\n            className={[\n                isValid ? 'valid' : '',\n            ].join(' ')}\n        />\n    </div>\n}\n","import React from 'react';\n\nimport './progress-indicator.scss';\n\nexport interface IProgressIndicator {\n    done?: boolean,\n    byClick?: () => any\n}\n\nexport const ProgressIndicator:React.FC<IProgressIndicator> = ({\n    done = false,\n    byClick = () => console.debug('click is not implemented')\n}) => {\n    return <div\n        className={[\n            'ProgressIndicator',\n            done ? 'done' : ''\n        ].join(' ')}\n        onClick={() => byClick()}\n        >\n        <div className=\"bg\">\n        </div>\n        <i className={[done ? 'checkmark-white' : 'checkmark'].join(' ')}></i>\n    </div>\n}\n","import React from 'react';\nimport './text-area.scss';\n\nexport interface ITextArea {\n    placeholder?: string,\n    value?: string,\n    isDisabled?: boolean,\n    isValid? : boolean,\n    byChange?: (newValue: string) => any\n}\n\nexport const TextArea:React.FC<ITextArea> = ({\n    placeholder = '',\n    value = '',\n    isDisabled = false,\n    isValid = true,\n    byChange = newValue => console.debug(`update text area with ${newValue} (not implemented)`)\n}) => {\n    return <div className={[\n            'TextArea',\n            isDisabled ? 'disabled' : '',\n            isValid ? 'valid' : ''\n        ].join(' ')}>\n        <textarea\n            value={value}\n            placeholder={placeholder}\n            disabled={isDisabled}\n            onChange={e => byChange(e.target.value)}\n        ></textarea>\n    </div>\n}\n","import React, { useState } from 'react';\nimport './buttons.scss';\n\nexport interface IAeroButton {\n    byClick?: () => any,\n    small?: boolean,\n    isDisabled?: boolean,\n}\n\nexport const AeroButton:React.FC<IAeroButton> = ({\n    children,\n    byClick = () => console.log('click not setted up'),\n    small =  false,\n    isDisabled = false,\n}) => {\n\n    const [classes, setClasses] = useState(['']);\n\n    return <div className={[\n                'AeroButton',\n                small ? 'small' : '',\n                isDisabled  ? 'disabled' : ''\n            ].join(' ')}>\n\n            <button\n                onClick={byClick}\n                className={classes.join(' ')}\n                disabled={isDisabled}\n                onTouchStart={() => setClasses(['touched'])}\n                onTouchEnd={() => setClasses([])}\n            >\n                {children}\n            </button>\n    </div>\n}\n","import React from 'react';\nimport { AeroButton } from './AeroButton';\n\nexport interface IAeroButtonAdd {\n    highlight? : boolean,\n    showSubstract? : boolean,\n    byAdd?: () => any,\n    bySubstract?: () => any,\n}\n\nexport const AeroButtonAdd:React.FC<IAeroButtonAdd> = ({\n    highlight = true,\n    showSubstract = false,\n    byAdd = () => console.log('clicked add'),\n    bySubstract = () => console.log('clicked substract')\n}) => {\n\n    return <div className=\"AeroButtonAdd\">\n        <div className=\"addition\">\n            <div className={showSubstract ? 'show' : ''}>\n                <AeroButton small byClick={bySubstract}>\n                    <i className=\"minus\"></i>\n                </AeroButton>\n            </div>\n        </div>\n        <AeroButton byClick={byAdd}>\n            <div className={['icons', showSubstract ? 'clicked' : '', highlight ? 'highlight' : ''].join(' ')}>\n                <i className=\"shopping-cart default\"></i>\n                <i className={[highlight ? 'plus-white' : 'plus',  'alternate'].join(' ')}></i>\n            </div>\n        </AeroButton>\n    </div>\n}\n","import React, {useState} from 'react';\n\nexport interface IAeroTumbler {\n    isOn?: boolean,\n    isHidden? : boolean,\n    byClick?: (toggleTo: boolean) => any\n}\n\nexport const AeroTumbler:React.FC<IAeroTumbler> = ({\n    children,\n    isOn = false,\n    isHidden = false,\n    byClick = (toggleTo) => console.debug(`toggle to ${toggleTo}`)\n}) => {\n    const defaultClasses = [isOn ? 'on' : '', isHidden ? 'hidden' : 'shown'];\n    const [classes, setClasses] = useState(['']);\n\n    return <div className=\"AeroTumbler\">\n        <button className={classes.concat(defaultClasses).join(' ')}\n            onClick={() => byClick(!isOn) }\n            onTouchStart={() => setClasses(['touched'])}\n            onTouchEnd={() => setTimeout(() => setClasses([]), 60)}\n        >\n            {children}\n        </button>\n    </div>\n}\n","export * from './ProgressIndicator';\nexport * from './TextArea';\nexport * from './TextInput';\nexport * from './AeroButton';\nexport * from './AeroButtonAdd';\nexport * from './AeroTumbler';\nexport * from './CallButton';\nexport * from './MailButton';\n","import { HeaderTumbler } from \"../../components\";\n\nexport const SET_SHOW_TUMBLERS = 'SET_SHOW_TUMBLERS';\nexport const SET_ACTIVE_TUMBLER = 'SET_ACTIVE_TUMBLER';\nexport const SET_SHOW_CHECKOUT_FORM = 'SET_SHOW_CHECKOUT_FORM';\nexport const SET_CATALOG_ACTIVE_VIEW = 'SET_CATALOG_ACTIVE_VIEW';\n\nexport enum CatalogView {\n    CART = 'CART',\n    TAGS = 'TAGS',\n    EVENTS = 'EVENTS',\n    CONTACTS = 'CONTACTS',\n    CATALOG = 'CATALOG',\n}\n\nexport interface $SetShowTumblers {\n    type: typeof SET_SHOW_TUMBLERS,\n    value: boolean\n}\n\nexport interface $SetActiveTumber {\n    type: typeof SET_ACTIVE_TUMBLER,\n    value: HeaderTumbler\n}\n\nexport interface $SetShowCheckoutForm {\n    type: typeof SET_SHOW_CHECKOUT_FORM,\n    value: boolean,\n}\n\nexport interface $SetCatalogActiveView {\n    type: typeof SET_CATALOG_ACTIVE_VIEW,\n    value: CatalogView\n}\n\nexport type $NavigationActionTypes =\n    $SetShowTumblers\n    | $SetActiveTumber\n    | $SetShowCheckoutForm\n    | $SetCatalogActiveView;\n\nexport interface $Catalog {\n    activeView: CatalogView,\n\n}\n\nexport interface $Page {\n    disableScroll: boolean,\n}\n\nexport interface $Header {\n    showTumblers: boolean,\n    activeTumbler: HeaderTumbler\n}\n\nexport interface $Navigation {\n    catalog: $Catalog\n    header: $Header,\n    page: $Page\n}\n","import {\n    $Navigation,\n    $NavigationActionTypes,\n    SET_SHOW_TUMBLERS,\n    SET_CATALOG_ACTIVE_VIEW,\n    $Catalog,\n    $Header,\n    CatalogView,\n    $Page\n} from \"./types\";\n\nimport { HeaderTumbler } from \"../../components\";\n\n\nconst initialState: $Navigation = {\n    catalog: {\n        activeView: CatalogView.CATALOG\n    },\n\n    header: {\n        showTumblers: false,\n        activeTumbler: HeaderTumbler.DEFAULT\n    },\n    page: {\n        disableScroll: false,\n    }\n}\n\nexport function catalogReducer(\n    state = initialState.catalog,\n    action: $NavigationActionTypes\n): $Catalog {\n    switch(action.type) {\n        case SET_CATALOG_ACTIVE_VIEW:\n            return {\n                ...state,\n                activeView: action.value\n            }\n        default : return state\n    }\n}\n\nconst viewTumblerMap = {\n    [CatalogView.CART]: HeaderTumbler.CART,\n    [CatalogView.TAGS]: HeaderTumbler.TAGS,\n    [CatalogView.EVENTS]: HeaderTumbler.EVENTS,\n    [CatalogView.CONTACTS]: HeaderTumbler.CONTACTS,\n    [CatalogView.CATALOG]: HeaderTumbler.DEFAULT,\n}\n\nexport function headerReducer(\n    state = initialState.header,\n    action: $NavigationActionTypes\n): $Header {\n    switch(action.type) {\n        case SET_CATALOG_ACTIVE_VIEW:\n            return {\n                ...state,\n                activeTumbler: viewTumblerMap[action.value]\n            }\n\n        case SET_SHOW_TUMBLERS:\n            return {\n                ...state,\n                showTumblers: action.value\n            }\n        default: return state\n    }\n\n}\n\nexport function pageReducer(\n    state = initialState.page,\n    action: $NavigationActionTypes\n): $Page {\n    switch(action.type) {\n        default: return state;\n    }\n}\n","import {\n    HeaderTumbler\n} from \"../../components\";\n\nimport {\n    $NavigationActionTypes,\n    SET_ACTIVE_TUMBLER,\n    SET_SHOW_TUMBLERS,\n    $SetShowCheckoutForm,\n    SET_SHOW_CHECKOUT_FORM,\n    $SetCatalogActiveView,\n    SET_CATALOG_ACTIVE_VIEW,\n    CatalogView\n} from \"./types\";\n\n\n\nexport function setActiveTumbler (tumbler: HeaderTumbler) : $NavigationActionTypes {\n    return {\n        type: SET_ACTIVE_TUMBLER,\n        value: tumbler\n    }\n}\n\nexport function setShowTumblers(showTumblers: boolean) : $NavigationActionTypes {\n    return {\n        type: SET_SHOW_TUMBLERS,\n        value: showTumblers\n    }\n}\n\nexport function setShowCheckoutForm(showCheckoutForm: boolean): $SetShowCheckoutForm {\n    return {\n        type: SET_SHOW_CHECKOUT_FORM,\n        value: showCheckoutForm\n    }\n}\n\nexport function setCatalogActiveView(activeView: CatalogView): $SetCatalogActiveView {\n    return {\n        type: SET_CATALOG_ACTIVE_VIEW,\n        value: activeView\n    }\n}\n","import { combineReducers } from 'redux';\nimport { headerReducer, catalogReducer, pageReducer } from './reducers';\n\nexport * from './actions';\nexport * from './types';\n\nexport const navigationReducer = combineReducers({\n    header: headerReducer,\n    catalog: catalogReducer,\n    page: pageReducer\n});\n","export * from './actions';\nexport * from './types';\nexport * from './reducers';\n","export * from './reducers';\nexport * from './actions';\nexport * from './types';\n","import {\n    IProductCard\n} from '../../components';\nimport { TProduct } from '../../services';\n\nexport const UPDATE_PRODUCT_CARD = 'UPDATE_PRODUCT_CARD';\nexport const FETCH_PRODUCTS_START = 'FETCH_PRODUCTS';\nexport const FETCH_RPODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE';\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_'\n\nexport interface $UpdateProductCardAction {\n    type: typeof UPDATE_PRODUCT_CARD,\n    addedCount: number,\n    id: number\n}\n\nexport interface $FetchProductsStartAction {\n    type: typeof FETCH_PRODUCTS_START\n}\n\nexport interface $FetchProductsFailureAction {\n    type: typeof FETCH_RPODUCTS_FAILURE,\n}\n\nexport interface $FetchProductsSuccessAction {\n    type: typeof FETCH_PRODUCTS_SUCCESS,\n    value: Array<TProduct>\n}\n\nexport interface $ProductCards {\n    list: Array<IProductCard>,\n    isFetching: boolean,\n    errors: Array<string>,\n}\n\nexport type $ProductCardsActionTypes = $UpdateProductCardAction\n    | $FetchProductsStartAction\n    | $FetchProductsSuccessAction\n    | $FetchProductsFailureAction;\n","import {\n    $ProductCardsActionTypes,\n    $ProductCards,\n    UPDATE_PRODUCT_CARD,\n    FETCH_PRODUCTS_START,\n    FETCH_PRODUCTS_SUCCESS,\n    FETCH_RPODUCTS_FAILURE\n} from \"./types\";\n\nimport {\n    productsMock\n} from './mock/mock';\n\nconst initialState: $ProductCards  = {\n    list: productsMock,\n    isFetching: false,\n    errors: []\n}\n\nexport function productCardsReducer (\n    state = initialState,\n    action: $ProductCardsActionTypes\n): $ProductCards {\n    switch (action.type) {\n        case UPDATE_PRODUCT_CARD:\n            return {\n                ...state,\n                list: state.list.map(card => ({\n                    ...card,\n                    addedCount: card.id === action.id ? action.addedCount : card.addedCount\n                }))\n            }\n        case FETCH_PRODUCTS_START:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case FETCH_RPODUCTS_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                errors: [...state.errors, action.type]\n            }\n        case FETCH_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                list: action.value.map(product => ({\n                    id: product.id,\n                    addedCount: 0,\n                    product\n                }))\n            }\n        default:\n            return state\n    }\n}\n","import {\n    IProductCard\n} from '../../../components';\n\nexport const productsMock : Array<IProductCard> = [\n    {\n        id: 0,\n        product: {\n            id: 0,\n            description: 'description',\n            name: 'Клубника и Шоколад',\n            price: 5.5,\n            imageUrl: require('./1.jpg'),\n            tags: ['orange']\n\n        },\n        addedCount: 0\n    },\n    {\n        id: 1,\n        product: {\n            id: 1,\n            description: 'description',\n            name: 'Клубника и банан',\n            price: 5.5,\n            imageUrl: require('./2.jpg'),\n            tags: [\n                'apple',\n                'lime',\n                'cranberries',\n                'banan',\n                'apple',\n                'lime',\n                'cranberries',\n                'banan',\n                'apple',\n                'lime',\n                'cranberries',\n                'banan',\n                'apple',\n                'lime',\n                'cranberries',\n                'banan',\n            ]\n        },\n        addedCount: 0\n    },\n    {\n        id: 2,\n        product: {\n            id: 2,\n            description: 'description',\n            name: 'Банан и кокос',\n            price: 5.5,\n            imageUrl: require('./3.jpg'),\n            tags: ['banena']\n        },\n        addedCount: 0\n    },\n    {\n        id: 3,\n        product: {\n            id: 3,\n            description: 'description',\n            name: 'Кокос и Клубника',\n            price: 5.5,\n            imageUrl: require('./4.jpg'),\n            tags: ['orange']\n        },\n        addedCount: 0\n    },\n    {\n        id: 4,\n        product: {\n            id: 4,\n            description: 'description',\n            name: 'Кокос и Клубника',\n            price: 5.5,\n            imageUrl: require('./5.jpg'),\n            tags: ['lime', 'orange']\n        },\n        addedCount: 0\n    },\n    {\n        id: 5,\n        product: {\n            id: 5,\n            description: 'description',\n            name: 'Кокос и Клубника',\n            price: 5.5,\n            imageUrl: require('./6.jpg'),\n            tags: ['orange']\n        },\n        addedCount: 0\n    },\n]\n","export interface TProduct {\n    id: number,\n    price: number,\n    name: string,\n    tags: Array<string>,\n    description: string,\n    imageUrl: string,\n}\n\nexport interface FetchProductsResponse {\n    data: Array<TProduct>,\n    error?: {\n        message: string,\n        code?: number,\n    }\n}\n\n\nexport async function fetchProducts () : Promise<FetchProductsResponse> {\n    let result: FetchProductsResponse = {\n        data: [],\n        error: undefined\n    };\n\n    try {\n        const response = await window.fetch('/graphql', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n\n            body: JSON.stringify({ query: `{\n                products {\n                    id,\n                    name,\n                    description,\n                    price,\n                    image {\n                        url\n                    },\n                    tags {\n                        name\n                    }\n                }\n            }`})\n        });\n\n        if (!response.ok) {\n            throw new Error('Network Response was not OK');\n        } else {\n            const body = await response.json();\n            result.data = body.data.products.map((p: any):TProduct => ({\n                id: p.id,\n                name: p.name,\n                description: p.description,\n                price: p.price,\n                imageUrl: p.image.url,\n                tags: p.tags.map((t: any) => t.name)\n            }));\n        }\n    } catch (error) {\n        result.error = {\n            message: error.message,\n            code: error.code\n        }\n    }\n    return result;\n}\n","import {\n    UPDATE_PRODUCT_CARD,\n    $ProductCardsActionTypes,\n    FETCH_PRODUCTS_START,\n    FETCH_RPODUCTS_FAILURE,\n    FETCH_PRODUCTS_SUCCESS,\n    $FetchProductsStartAction,\n    $FetchProductsSuccessAction,\n    $FetchProductsFailureAction,\n    $ProductCards,\n} from \"./types\";\n\nimport { TProduct, fetchProducts } from \"../../services\";\nimport { ThunkAction } from \"redux-thunk\";\n\nexport function updateProductCard(cardId: number, newCount: number): $ProductCardsActionTypes {\n    return {\n        type: UPDATE_PRODUCT_CARD,\n        addedCount: newCount,\n        id: cardId,\n    }\n}\n\nexport function fetchProductsStart(): $FetchProductsStartAction {\n    return {\n        type: FETCH_PRODUCTS_START,\n    }\n}\n\nexport function fetchProductsSuccess(products: Array<TProduct>): $FetchProductsSuccessAction {\n    return {\n        type: FETCH_PRODUCTS_SUCCESS,\n        value: products\n    }\n}\n\nexport function fetchProductsFailure(): $FetchProductsFailureAction {\n    return {\n        type: FETCH_RPODUCTS_FAILURE,\n    }\n}\n\nexport function fetchProductsAsync(): ThunkAction<void, $ProductCards, undefined, $ProductCardsActionTypes> {\n    return async (dispatch: Function) => {\n        dispatch(fetchProductsStart());\n        const result = await fetchProducts();\n        if (result.error) {\n            dispatch(fetchProductsFailure());\n        } else {\n            dispatch(fetchProductsSuccess(result.data));\n        }\n    }\n}\n","export * from './reducers';\nexport * from './actions';\nexport * from './types';\n","import { CheckoutBlock } from \"../../components\";\n\nexport const SET_CHECKOUT_BLOCK = 'SET_CHECKOUT_BLOCK';\n\nexport const UPDATE_NAME = 'UPDATE_NAME';\nexport const UPDATE_PHONE = 'UPDATE_PHONE';\nexport const UPDATE_EMAIL = 'UPDATE_EMAIL';\nexport const ACCEPT_FIRST_CHECKOUT_BLOCK = 'ACCEPT_FIRST_CHECKOUT_BLOCK';\n\nexport const UPDATE_DELIVERY_INFO = 'UPDATE_DELIVERY_INFO';\nexport const SET_SELF_DELIVERY = 'SET_SELF_DELIVERY';\nexport const ACCEPT_ADDRESS_BLOCK = 'ACCEPT_ADDRESS_BLOCK';\n\nexport const ACCEPT_FINAL_BLOCK = 'ACCEPT_FINAL_BLOCK';\n\nexport const SET_CHEKOUT_BLOCK_ACCEPT_STATUS = 'SET_CHEKOUT_BLOCK_ACCEPT_STATUS';\n\nexport const RESET_FORM = 'RESET_FORM';\n\nexport interface $AcceptFirstCheckoutBlock {\n    type: typeof ACCEPT_FIRST_CHECKOUT_BLOCK\n}\n\nexport interface $AcceptAddressBlock {\n    type: typeof ACCEPT_ADDRESS_BLOCK\n}\n\nexport interface $UpdateName {\n    type: typeof UPDATE_NAME,\n    value: string\n}\n\nexport interface $UpdatePhone {\n    type: typeof UPDATE_PHONE,\n    value: string\n}\n\nexport interface $UpdateEmail {\n    type: typeof UPDATE_EMAIL,\n    value: string\n}\n\nexport interface $UpdateDeliveryInfo {\n    type: typeof UPDATE_DELIVERY_INFO,\n    value: string\n}\n\nexport interface $SetSelfDelivery {\n    type: typeof SET_SELF_DELIVERY,\n    value: boolean\n}\n\nexport interface $AcceptFinalBlock {\n    type: typeof ACCEPT_FINAL_BLOCK,\n}\n\nexport interface $ResetForm {\n    type: typeof RESET_FORM\n}\n\nexport type $CheckoutFormTypes = $AcceptFirstCheckoutBlock\n    | $UpdateName\n    | $UpdatePhone\n    | $UpdateEmail\n    | $UpdateDeliveryInfo\n    | $SetSelfDelivery\n    | $AcceptAddressBlock\n    | $AcceptFinalBlock\n    | $ResetForm\n\nexport interface $CheckoutFormFirstBlock {\n    name: {\n        value: string,\n        isValid: boolean,\n        placeholder: string,\n    },\n\n    phone: {\n        value: string,\n        isValid: boolean,\n        placeholder: string,\n    }\n\n    email: {\n        value: string,\n        isValid: boolean,\n        placeholder: string,\n    },\n\n    isValid: boolean,\n    isAccepted: boolean\n}\n\nexport interface $ChekcoutFormAddressBlock {\n    deliveryInfo: {\n        value: string,\n        isValid: boolean\n    }\n\n    isSelfDelivery: boolean,\n\n    isValid: boolean,\n    isAccepted: boolean\n}\n\nexport interface $CheckoutFormFinalBlock {\n    isAccepted: boolean\n}\n\nexport interface $CheckoutForm {\n    checkoutBlock: CheckoutBlock,\n    firstBlock: $CheckoutFormFirstBlock,\n    addressBlock: $ChekcoutFormAddressBlock,\n    finalBlock: $CheckoutFormFinalBlock,\n}\n","import {\n    isMobilePhone,\n    isEmail,\n} from 'validator'\n\nimport {\n    CheckoutBlock\n} from '../../components';\n\nimport {\n    $CheckoutForm,\n    $CheckoutFormTypes,\n    UPDATE_NAME,\n    $CheckoutFormFirstBlock,\n    ACCEPT_FIRST_CHECKOUT_BLOCK,\n    UPDATE_PHONE,\n    UPDATE_EMAIL,\n    $ChekcoutFormAddressBlock,\n    UPDATE_DELIVERY_INFO,\n    SET_SELF_DELIVERY,\n    ACCEPT_ADDRESS_BLOCK,\n    ACCEPT_FINAL_BLOCK,\n    $CheckoutFormFinalBlock,\n    RESET_FORM\n} from \"./types\";\n\nconst initialState: $CheckoutForm = {\n    checkoutBlock: CheckoutBlock.FIRST,\n    firstBlock: {\n        name: {\n            value: '',\n            isValid: false,\n            placeholder: 'Имя'\n        },\n\n        phone: {\n            value: '',\n            isValid: false,\n            placeholder: 'Телефон (+375XXXXXXXXX)'\n        },\n\n        email: {\n            value: '',\n            isValid: false,\n            placeholder: 'email'\n        },\n\n        isValid: false,\n        isAccepted: false,\n    },\n\n    addressBlock: {\n        deliveryInfo: {\n            value: '',\n            isValid: false\n        },\n        isSelfDelivery: false,\n        isValid: false,\n        isAccepted: false\n    },\n    finalBlock: {\n        isAccepted: false\n    }\n}\n\nexport function checkoutBlockReducer (\n    state = initialState.checkoutBlock,\n    action: $CheckoutFormTypes\n): CheckoutBlock {\n    switch (action.type) {\n        case ACCEPT_FIRST_CHECKOUT_BLOCK:\n            return CheckoutBlock.SECOND\n        case ACCEPT_ADDRESS_BLOCK:\n            return CheckoutBlock.THIRD\n        case ACCEPT_FINAL_BLOCK:\n            return CheckoutBlock.FOURTH\n        case RESET_FORM:\n            return initialState.checkoutBlock\n        default: return state;\n    }\n}\n\nexport function firstBlockReducer (\n    state = initialState.firstBlock,\n    action: $CheckoutFormTypes\n): $CheckoutFormFirstBlock {\n    switch (action.type) {\n        case ACCEPT_FIRST_CHECKOUT_BLOCK:\n            return {\n                ...state,\n                isAccepted: true\n            }\n\n        case UPDATE_NAME : {\n            const isNameValid = action.value.length > 1;\n            const isValidForm = state.email.isValid && state.phone.isValid && isNameValid;\n            return {\n                ...state,\n                name: {\n                    ...state.name,\n                    value: action.value,\n                    isValid: isNameValid\n                },\n\n                isAccepted: false,\n                isValid: isValidForm\n            }\n        }\n        case UPDATE_PHONE : {\n            const isValidPhone = isMobilePhone(action.value, 'be-BY');\n            const isValidForm = isValidPhone && state.email.isValid && state.name.isValid;\n            return {\n                ...state,\n                phone: {\n                    ...state.phone,\n                    value: action.value,\n                    isValid: isValidPhone\n                },\n                isValid: isValidForm\n            }\n        }\n\n        case UPDATE_EMAIL : {\n            const isValidEmail = isEmail(action.value);\n            const isValidForm = isValidEmail && state.phone.isValid && state.name.isValid;\n            return {\n                ...state,\n                email: {\n                    ...state.email,\n                    value: action.value,\n                    isValid: isValidEmail\n                },\n                isValid: isValidForm\n            }\n        }\n\n        case RESET_FORM : {\n            return {\n                ...initialState.firstBlock\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport function checkoutFormAddressBlockReducer (\n    state = initialState.addressBlock,\n    action: $CheckoutFormTypes\n): $ChekcoutFormAddressBlock {\n    switch(action.type) {\n        case UPDATE_DELIVERY_INFO:\n            const isValidDeliveryInfo = action.value.length > 5;\n            return {\n                ...state,\n                deliveryInfo: {\n                    value: action.value,\n                    isValid: isValidDeliveryInfo\n                },\n\n                isValid: isValidDeliveryInfo,\n                isAccepted: false,\n            }\n\n        case SET_SELF_DELIVERY:\n            const isFormValid = action.value || state.deliveryInfo.value.length > 5;\n            return {\n                ...state,\n                isSelfDelivery: action.value,\n                isValid: isFormValid,\n                isAccepted: false,\n            }\n\n        case ACCEPT_ADDRESS_BLOCK:\n            return  {\n                ...state,\n                isAccepted: true\n            }\n\n        case RESET_FORM:\n            return {\n                ...initialState.addressBlock\n            }\n        default: return state;\n    }\n}\n\nexport function checkoutFormFinalBlockReducer(\n    state = initialState.finalBlock,\n    action: $CheckoutFormTypes\n): $CheckoutFormFinalBlock {\n    switch(action.type) {\n        case ACCEPT_FINAL_BLOCK:\n            return {\n                ...state,\n                isAccepted: true\n            }\n\n        case RESET_FORM:\n            return {\n                ...initialState.finalBlock\n            }\n        default: return state\n    }\n}\n","import {\n    ACCEPT_FIRST_CHECKOUT_BLOCK,\n    UPDATE_NAME,\n    $AcceptFirstCheckoutBlock,\n    $UpdateName,\n    $UpdatePhone,\n    UPDATE_PHONE,\n    UPDATE_EMAIL,\n    $UpdateEmail,\n    $UpdateDeliveryInfo,\n    UPDATE_DELIVERY_INFO,\n    $SetSelfDelivery,\n    SET_SELF_DELIVERY,\n    $AcceptAddressBlock,\n    ACCEPT_ADDRESS_BLOCK,\n    $AcceptFinalBlock,\n    ACCEPT_FINAL_BLOCK,\n    $ResetForm,\n    RESET_FORM,\n} from \"./types\";\n\nexport function acceptFirstCheckoutBlock(): $AcceptFirstCheckoutBlock {\n    return {\n        type: ACCEPT_FIRST_CHECKOUT_BLOCK\n    }\n}\n\nexport function acceptAddressBlock(): $AcceptAddressBlock {\n    return {\n        type: ACCEPT_ADDRESS_BLOCK\n    }\n}\n\nexport function updateName(name: string): $UpdateName {\n    return {\n        type: UPDATE_NAME,\n        value: name\n    }\n}\n\nexport function updatePhone(phone: string): $UpdatePhone {\n    return {\n        type: UPDATE_PHONE,\n        value: phone\n    }\n}\n\nexport function updateEmail(email: string): $UpdateEmail {\n    return {\n        type: UPDATE_EMAIL,\n        value: email\n    }\n}\n\nexport function updateDeliveryInfo(deliveryInfo: string): $UpdateDeliveryInfo {\n    return {\n        type: UPDATE_DELIVERY_INFO,\n        value: deliveryInfo\n    }\n}\n\nexport function setSelfDelivery(selfDelivery : boolean): $SetSelfDelivery {\n    return {\n        type: SET_SELF_DELIVERY,\n        value: selfDelivery\n    }\n}\n\nexport function acceptFinalCheckoutBlock(): $AcceptFinalBlock {\n    return {\n        type: ACCEPT_FINAL_BLOCK,\n    }\n}\n\nexport function resetForm(): $ResetForm {\n    return {\n        type: RESET_FORM\n    }\n}\n","import { combineReducers } from 'redux';\nimport { checkoutBlockReducer, firstBlockReducer, checkoutFormAddressBlockReducer, checkoutFormFinalBlockReducer } from './reducers';\nimport { $CheckoutForm } from './types';\n\nexport * from './reducers';\nexport * from './actions';\nexport * from './types';\n\n\nexport const checkoutFormReducer = combineReducers<$CheckoutForm>({\n    checkoutBlock: checkoutBlockReducer,\n    firstBlock: firstBlockReducer,\n    addressBlock: checkoutFormAddressBlockReducer,\n    finalBlock: checkoutFormFinalBlockReducer\n});\n","export const UPDATE_SELECTION = 'UPDATE_SELECTION';\n\nexport interface $UpdateSelection {\n    type: typeof UPDATE_SELECTION,\n    value: Array<string>\n}\n\n\nexport type $TagsActionTypes = $UpdateSelection;\n\nexport interface $Tags {\n    all: Array<string>\n    selected: Array<string>\n}\n","import { $Tags, $TagsActionTypes, UPDATE_SELECTION, } from \"./types\";\n\nconst initialState: $Tags = {\n    all: [\n        'apple',\n        'orange',\n        'banena',\n        'lime',\n        'apple1',\n        'orange1',\n        'banena1',\n        'lime1',\n        'apple2',\n        'orange2',\n        'banena2',\n        'lime2',\n    ],\n\n    selected: [\n    ]\n}\n\nexport function tagsReducer(\n    state = initialState,\n    action: $TagsActionTypes\n): $Tags {\n    switch(action.type) {\n        case UPDATE_SELECTION:\n            return {\n                ...state,\n                selected: [...action.value]\n            }\n        default: return state;\n    }\n}\n","import {\n    $UpdateSelection,\n    UPDATE_SELECTION\n} from \"./types\";\n\nexport function updateSelectionAction(tags: Array<string>): $UpdateSelection {\n    return {\n        type: UPDATE_SELECTION,\n        value: tags\n    }\n}\n","export * from './reducers';\nexport * from './actions';\nexport * from './types';\n","module.exports = __webpack_public_path__ + \"static/media/pie-optimized_f2.ffe303ae.jpg\";","import { $Contacts } from \"./types\"\n\nconst initialState: $Contacts = {\n    email: 'email@email.email',\n    phone: '+3750000000',\n    instagram: 'swtgrn'\n}\n\nexport function contactsReducer(\n    state = initialState,\n    action: any\n): $Contacts {\n    switch(action.type) {\n        default: return state;\n    }\n}\n","import { $Events } from \"./types\";\n\nconst initialState: $Events  = {\n    list: []\n}\n\nexport function eventsReducer (\n    state = initialState,\n    action: any\n): $Events {\n    switch (action.type) {\n        default: return state;\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/circle-pies.8a7fecd9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.3b8a8097.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.86f9f027.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.4ec33ef4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.68c735f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.06d066b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.a5ff8351.jpg\";","import React from 'react';\nimport {\n    CheckoutForm,\n    CheckoutInfoBlock,\n    CheckoutAddressBlock,\n    CheckoutDoublecheckBlock,\n    IProductCard,\n} from '../../components'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    $App,\n    $CheckoutForm,\n    resetForm,\n    $CheckoutFormFirstBlock,\n    updateName,\n    updatePhone,\n    acceptFirstCheckoutBlock,\n    updateEmail,\n    $ChekcoutFormAddressBlock,\n    updateDeliveryInfo,\n    setSelfDelivery,\n    acceptAddressBlock,\n    acceptFinalCheckoutBlock,\n    $CheckoutFormFinalBlock,\n} from '../../store';\n\nimport { AeroButton, InputType } from '../../components/essentials';\nexport interface ICheckoutFormContainer {\n\n}\n\nexport const CheckoutFormContainer:React.FC<ICheckoutFormContainer> = () => {\n    const checkoutForm = useSelector<$App, $CheckoutForm>(state => state.checkoutForm);\n    const checkoutInfo = useSelector<$App, $CheckoutFormFirstBlock>(state => state.checkoutForm.firstBlock);\n    const checkoutAddress = useSelector<$App, $ChekcoutFormAddressBlock>(state => state.checkoutForm.addressBlock);\n    const checkoutDoubleCheck = useSelector<$App, $CheckoutFormFinalBlock>(state => state.checkoutForm.finalBlock);\n\n    const products = useSelector<$App, Array<IProductCard>>(state => state.productCards.list.filter(p => p.addedCount > 0));\n\n    const dispatch = useDispatch();\n\n    return <>\n        <CheckoutForm\n            progress={[\n                checkoutInfo.isAccepted,\n                checkoutAddress.isAccepted,\n                checkoutDoubleCheck.isAccepted\n            ]}\n\n            activeBlock={checkoutForm.checkoutBlock}\n\n            firstBlock={\n                <CheckoutInfoBlock\n                    inputs={[\n                        {\n                            ...checkoutInfo.name,\n                            type: InputType.TEXT,\n                            byUpdate: name => dispatch(updateName(name))\n                        },\n                        {\n                            ...checkoutInfo.phone,\n                            type: InputType.PHONE,\n                            byUpdate: phone => dispatch(updatePhone(phone))\n                        },\n                        {\n                            ...checkoutInfo.email,\n                            type: InputType.EMAIL,\n                            byUpdate: email => dispatch(updateEmail(email))\n                        }\n                    ]}\n\n                    byAccept={() => dispatch(acceptFirstCheckoutBlock())}\n                ></CheckoutInfoBlock>\n            }\n\n            secondBlock={\n                <CheckoutAddressBlock\n                    address={{\n                        ...checkoutAddress.deliveryInfo,\n                        byChange: value => dispatch(updateDeliveryInfo(value)),\n                        isDisabled: checkoutAddress.isSelfDelivery,\n                        placeholder: 'Информация для доставки'\n                    }}\n                    selfDelivery={{\n                        isOn: checkoutAddress.isSelfDelivery,\n                        byClick: toggleTo => dispatch(setSelfDelivery(toggleTo))\n                    }}\n                    isValid={checkoutAddress.isValid}\n                    byAccept={() => dispatch(acceptAddressBlock())}\n                ></CheckoutAddressBlock>\n            }\n\n            thirdBlock={\n                <CheckoutDoublecheckBlock\n                    products={products}\n                    name={checkoutInfo.name.value}\n                    phone={checkoutInfo.phone.value}\n                    email={checkoutInfo.phone.value}\n                    address={checkoutAddress.deliveryInfo.value}\n                    isSelfDelivery={checkoutAddress.isSelfDelivery}\n                    byAccept={() => dispatch(acceptFinalCheckoutBlock())}\n                >\n                </CheckoutDoublecheckBlock>\n            }\n\n            fourthBlock={\n                <>\n                    Спасибо за заказ\n                    <AeroButton\n                        byClick={() => dispatch(resetForm())}\n                    >\n                        <i className=\"checkmark\"></i>\n                    </AeroButton>\n                </>\n            }\n        ></CheckoutForm>\n    </>\n}\n","import { useSelector } from \"react-redux\";\n\nimport {\n    $App,\n} from '../store';\n\nimport {\n    intersection\n} from 'lodash';\nimport { IProductCard } from \"../components\";\n\n/**\n * return list of products which contains selected tags (OR logic)\n */\nexport function useFilteredProducts() {\n    const productCards = useSelector<$App, Array<IProductCard>>(state => {\n        if (state.tags.selected.length > 0) {\n            return state.productCards.list.filter(pc => {\n                return intersection(state.tags.selected, pc.product.tags || []).length > 0\n            })\n        } else {\n            return state.productCards.list\n        }\n    });\n\n    return productCards;\n}\n","import React from 'react';\n\nimport {\n    Layout,\n    Header,\n    HeaderTumbler,\n    SidePane,\n    SidePaneDirection,\n    Tags,\n    Contacts,\n    Events\n} from '../components';\n\nimport  {\n    $App,\n    $ProductCards,\n    CatalogView,\n    $Tags,\n    updateSelectionAction,\n    $Contacts,\n    $Events,\n} from '../store';\n\nimport {\n    useSelector,\n    useDispatch\n} from 'react-redux';\n\nimport {\n    $Navigation,\n    setActiveTumbler,\n    setShowTumblers,\n    setCatalogActiveView,\n} from '../store/navigation';\n\nimport {\n    ProductCardsContainer,\n    ShoppingCartContainer\n} from './';\n\nimport { CheckoutFormContainer } from './checkout-form';\nimport { useFilteredProducts } from './selectors';\n\nconst tumblerViewMap = {\n    [HeaderTumbler.CART] : CatalogView.CART,\n    [HeaderTumbler.TAGS] : CatalogView.TAGS,\n    [HeaderTumbler.EVENTS] : CatalogView.EVENTS,\n    [HeaderTumbler.CONTACTS] : CatalogView.CONTACTS,\n    [HeaderTumbler.DEFAULT] : CatalogView.CATALOG,\n}\n\nexport const NavigationContainer:React.FC = () => {\n\n    const navigation = useSelector<$App, $Navigation>(state => state.navigation);\n    const productCards = useSelector<$App, $ProductCards>(state => state.productCards);\n    const tags = useSelector<$App, $Tags>(state => state.tags);\n    const contacts = useSelector<$App, $Contacts>(state => state.contacts);\n    const events = useSelector<$App, $Events>(state => state.events);\n    const dispatch = useDispatch();\n\n    return <>\n        <Layout\n                header={\n                    <div className=\"header-container\">\n                        <Header\n                            shoppingCartItemsCount={productCards.list.map(c => c.addedCount).reduce((sum, v) => sum + v)}\n                            selectedTagsCount={tags.selected.length}\n                            showTumblers={navigation.header.showTumblers}\n                            byToggle={tumbler => dispatch(setCatalogActiveView(tumblerViewMap[tumbler]))}\n                            activeTumbler={navigation.header.activeTumbler}\n                            eventsCount={events.list.length}\n                        ></Header>\n                    </div>\n                }\n\n                isSidePaneOpen={navigation.catalog.activeView !== CatalogView.CATALOG}\n\n                catalog={\n                    <>\n                        <SidePane\n                            isOpen={ navigation.catalog.activeView === CatalogView.CART }\n                            direction={ SidePaneDirection.LTR }\n                        >\n                            <ShoppingCartContainer></ShoppingCartContainer>\n                        </SidePane>\n\n                        <SidePane\n                            isOpen={ navigation.catalog.activeView === CatalogView.TAGS }\n                            direction={ SidePaneDirection.LTR }\n                        >\n                            <Tags\n                                {...tags}\n                                productsCount={useFilteredProducts().length}\n                                byUpdateSelection={tags => dispatch(updateSelectionAction(tags))}\n                                byClickOnMessage={() => dispatch(setCatalogActiveView(CatalogView.CATALOG))}\n                            ></Tags>\n                        </SidePane>\n                        <ProductCardsContainer></ProductCardsContainer>\n                        <SidePane\n                            isOpen={ navigation.catalog.activeView === CatalogView.CONTACTS}\n                            direction={ SidePaneDirection.RTL }\n                        >\n                            <Contacts\n                                {...contacts}\n                            ></Contacts>\n                        </SidePane>\n\n                        <SidePane\n                            isOpen={ navigation.catalog.activeView === CatalogView.EVENTS}\n                            direction={ SidePaneDirection.RTL }\n                        >\n                            <>\n                                <Events events={events.list}></Events>\n                            </>\n                        </SidePane>\n\n                    </>\n                }\n\n                byScrollToTop={() => {\n                    dispatch(setShowTumblers(false));\n                    dispatch(setActiveTumbler(HeaderTumbler.DEFAULT))\n                }}\n\n                byScrollToCatalog={() => dispatch(setShowTumblers(true))}\n\n                shoppingCart={\n                    <ShoppingCartContainer></ShoppingCartContainer>\n                }\n\n                checkoutForm={\n                    <CheckoutFormContainer></CheckoutFormContainer>\n                }\n\n                startingScreen={\n                    <i className=\"logo\"></i>\n                }\n            >\n        </Layout>\n    </>\n}\n","import React from 'react';\nimport { ProductCard, IProductCard } from '../components';\nimport {\n    updateProductCard\n} from '../store';\n\nimport {\n    useFilteredProducts\n} from './selectors';\n\nimport {useDispatch} from 'react-redux';\n\nexport interface IProductCards {\n    list: Array<IProductCard>\n}\n\nexport const ProductCardsContainer:React.FC = () => {\n    const products = useFilteredProducts();\n    const dispatch = useDispatch();\n\n    return <>\n        {products.map(p =>\n            <ProductCard\n                byCountUpdate={newCount => { dispatch(updateProductCard(p.id, newCount))} }\n                key={p.id}\n                {...p}\n            ></ProductCard>\n        )}\n    </>\n}\n","import React from 'react';\nimport {\n    ProductCardSmall, ShoppingCart, IProductCard\n} from '../components';\n\n\nimport {\n    $App, updateProductCard, setShowCheckoutForm\n} from '../store'\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport interface IShoppingCartContainer {\n\n}\n\nexport const ShoppingCartContainer:React.FC<IShoppingCartContainer> = () => {\n\n\n    const productCards = useSelector<$App, Array<IProductCard>>(state => state.productCards.list.filter(card => card.addedCount > 0));\n\n    const dispatch = useDispatch();\n\n    return <>\n        <ShoppingCart\n            products={\n                productCards.map(productCard => (\n                    <ProductCardSmall\n                        showControls={true}\n                        key={productCard.id}\n                        {...productCard}\n                        byCountUpdate={newCount => { dispatch(updateProductCard(productCard.id, newCount))} }\n                    ></ProductCardSmall>\n                ))\n            }\n            price={\n                productCards\n                    .map(pc => (pc.addedCount * (pc.product.price || 0)))\n                    .reduce((sum, val) => (sum + val), 0)\n            }\n            byCheckout={() => dispatch(setShowCheckoutForm(true))}\n        >\n        </ShoppingCart>\n    </>\n}\n","import React from 'react';\nimport {\n    NavigationContainer\n} from './containers';\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <NavigationContainer></NavigationContainer>\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'smoothscroll-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store, fetchProductsAsync } from './store';\nimport {\n    Provider\n} from 'react-redux';\n\n\nstore.dispatch<any>(fetchProductsAsync());\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}